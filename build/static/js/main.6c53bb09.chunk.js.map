{"version":3,"sources":["components/Loading/index.jsx","utils/paths.js","components/Navbar/Navbar.jsx","logo.svg","services/order.js","pages/HomePage.jsx","services/auth.js","pages/Signup.jsx","pages/LogIn.jsx","routing-components/NormalRoute.jsx","routing-components/ProtectedRoute.jsx","components/AdminNavbar/AdminNavbar.jsx","pages/Admin/ViewAllOrders.jsx","services/menu.js","pages/Admin/CreateMenu.jsx","pages/Admin/CreateDish.jsx","components/MenuNavbar/MenuNavbar.jsx","components/Dish/Dish.jsx","components/TableOrder/TableOrder.jsx","components/MenuFooterbar/MenuFooterbar.jsx","components/Payment/CheckOutForm.jsx","components/Payment/Payment.jsx","pages/Customer/OrderPage.jsx","components/MenuList/MenuList.jsx","pages/Customer/MenuPage.jsx","App.js","index.js"],"names":["LoadingComponent","className","VIEWALLORDERS","CREATEMENU","CREATEDISH","Navbar","props","React","useState","isActive","setisActive","to","user","PATHS","onClick","handleLogout","internalServerError","err","console","log","response","data","errorMessage","status","orderService","axios","create","baseURL","process","addNewOrder","table","post","then","res","catch","addDishToOrder","dishAndTable","getOrder","tableNumber","getTotal","changeToPaid","getAllOrders","get","clearTable","removeDishFromOrder","orderIdAndDish","HomePage","state","handleChange","event","setState","target","value","handleSubmit","preventDefault","history","push","this","style","backgroundImage","onSubmit","id","name","type","onChange","Component","successStatus","authService","login","credentials","getLoggedIn","headers","Authorization","localStorage","getItem","signup","logout","delete","Signup","username","password","error","handleInputChange","handleFormSubmission","setItem","accessToken","authenticate","htmlFor","placeholder","required","minLength","message","Login","NormalRoute","exact","path","component","componentProps","render","ProtectedRoute","AdminNavbar","ViewAllOrders","orders","componentDidMount","handleClear","map","el","index","dishesOrdered","val","units","dishType","menuService","addNewDish","dish","addDishToMenu","removeDishFromMenu","getAllDishes","getMenu","CreateMenu","dishes","selectedDishName","menu","isLoading","responseBack","responseback","filteredDish","filter","handleRemove","allDishes","CreateDish","description","tags","format","picture_url","stock","price","MenuNavbar","Dish","src","alt","handleOrder","_id","TableOrder","order","reduce","acc","isLoading1","paid","handleRemoveDish","CheckoutForm","succeeded","setSucceeded","setError","processing","setProcessing","disabled","setDisabled","clientSecret","setClientSecret","stripe","useStripe","elements","useElements","useEffect","window","fetch","method","body","JSON","stringify","items","json","a","empty","ev","confirmCardPayment","payment_method","card","getElement","CardElement","payload","options","base","color","border","fontFamily","fontSmoothing","fontSize","invalid","iconColor","role","promise","loadStripe","App","OrderPage","total","Promise","all","match","params","responsesBack","dishId","orderId","handleClick","MenuList","totalItems","newAndUpdatedOrder","MenuPage","removeItem","LogIn","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c53bb09.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Loading.css\";\n\nconst LoadingComponent = () => {\n  return (\n    <div className=\"wrapper\">\n      <div className=\"spinner\">\n        <div className=\"bounce1\"></div>\n        <div className=\"bounce2\"></div>\n        <div className=\"bounce3\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingComponent;\n","export const HOMEPAGE = \"/\";\nexport const SIGNUPPAGE = \"/auth/signup\";\nexport const LOGINPAGE = \"/auth/login\";\nexport const VIEWALLORDERS = \"/admin/view-all-orders\";\nexport const CREATEMENU = \"/admin/create-menu\";\nexport const CREATEDISH = \"/admin/create-dish\";\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n// import \"./Navbar.css\";\nimport * as PATHS from \"../../utils/paths\";\n\n////EVENT LISTENER///\n\nconst Navbar = (props) => {\n  const [isActive, setisActive] = React.useState(\"\");\n\n  return (\n    <nav className=\"navbar has-background-primary is-fixed-top\">\n      <div className=\"container\">\n        <div className=\"navbar-start\">\n          <Link to=\"/\" className=\" navbar-item is-size-3 is-size-5-mobile\">\n            Pay at the table App\n          </Link>\n        </div>\n        <div className=\"navbar-end\">\n          {props.user ? (\n            <>\n              <Link to={PATHS.VIEWALLORDERS} className=\" navbar-item\">\n                View All Orders\n              </Link>\n\n              <Link to={PATHS.CREATEMENU} className=\" navbar-item\">\n                Edit your menu\n              </Link>\n\n              <Link to={PATHS.CREATEDISH} className=\" navbar-item\">\n                Create new dish\n              </Link>\n              <button className=\" navbar-item\" onClick={props.handleLogout}>\n                Logout\n              </button>\n            </>\n          ) : (\n            <>\n              <div\n                className={`navbar-item has-dropdown ${\n                  isActive ? \"is-active\" : \"\"\n                }`}\n              >\n                <a\n                  onClick={() => setisActive(!isActive)}\n                  className=\"navbar-link\"\n                >\n                  Admin Access\n                </a>\n                <div className=\"navbar-dropdown is-boxed\">\n                  <Link to=\"/auth/signup\" className=\"navbar-item\">\n                    Join?\n                  </Link>\n                  <Link to=\"/auth/login\" className=\"navbar-item\">\n                    Log In\n                  </Link>\n                </div>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import axios from \"axios\";\n\nfunction internalServerError(err) {\n  console.log(\"err:\", err.response.data);\n  if (err.response && err.response.data && err.response.data.errorMessage) {\n    return {\n      status: false,\n      errorMessage: err.response.data.errorMessage,\n    };\n  }\n  return {\n    status: false,\n    errorMessage: \"Internal server error. Please check your server\",\n  };\n}\n\nfunction successStatus(res) {\n  return {\n    status: true,\n    data: res.data,\n  };\n}\n\nconst orderService = axios.create({\n  baseURL: `${process.env.REACT_APP_SERVER_URL}/order`,\n});\n\nexport function addNewOrder(table) {\n  return orderService\n    .post(\"/addNewOrder\", table)\n    .then((res) => {\n      return res.data;\n    })\n    .catch(internalServerError);\n}\n\nexport function addDishToOrder(dishAndTable) {\n  return orderService\n    .post(\"/addDishToOrder\", dishAndTable)\n    .then((res) => {\n      return res.data;\n    })\n    .catch(internalServerError);\n}\nexport function getOrder(tableNumber) {\n  return orderService\n    .post(\"/getOrder\", tableNumber)\n    .then((res) => {\n      return res.data;\n    })\n    .catch(internalServerError);\n}\n\nexport function getTotal(table) {\n  return orderService\n    .post(\"/getTotal\", table)\n    .then((res) => {\n      return res.data;\n    })\n    .catch(internalServerError);\n}\n\nexport function changeToPaid(table) {\n  return orderService\n    .post(\"/changeToPaid\", table)\n    .then((res) => {\n      return res.data;\n    })\n    .catch(internalServerError);\n}\n\nexport function getAllOrders() {\n  return orderService\n    .get(\"/getAllOrders\")\n    .then((res) => {\n      return res.data;\n    })\n    .catch(internalServerError);\n}\n\nexport function clearTable(table) {\n  return orderService\n    .post(\"/clearTable\", table)\n    .then((res) => {\n      return res.data;\n    })\n    .catch(internalServerError);\n}\nexport function removeDishFromOrder(orderIdAndDish) {\n  return orderService\n    .post(\"/removeDishFromOrder\", orderIdAndDish)\n    .then((res) => {\n      return res.data;\n    })\n    .catch(internalServerError);\n}\n","import logo from \"../logo.svg\";\nimport \"../App.css\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport { addNewOrder } from \"../services/order\";\n\nimport React, { Component } from \"react\";\n\nexport default class HomePage extends Component {\n  state = {\n    tableNumber: 0,\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      tableNumber: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const table = { table: this.state.tableNumber };\n    addNewOrder(table)\n      .then(() => {})\n      .then(() => {\n        // addNewOrder(this.state.table).then((res) => {\n        //   this.setState({\n        //     tables: [res, ...this.state.tables],\n        //   });\n        // });\n\n        this.props.history.push(`/${this.state.tableNumber}`);\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"hero is-fullheight-with-navbar\">\n        <Navbar handleLogout={this.handleLogout} user={this.state.user} />\n\n        <div\n          className=\"section main-image\"\n          style={{\n            backgroundImage: `url(/images/coolrestaurant.jpg)`,\n          }}\n        >\n          <section className=\"section\">\n            <div className=\"tile-ancestor\">\n              <div className=\"tile is-parent is-justify-content-center\">\n                <div className=\"tile is-child box has-text-centered has-background-primary is-4 is-justify-content-center\">\n                  <h1 className=\"title \">The Iron Restaurant</h1>\n                </div>\n              </div>\n            </div>\n          </section>\n          <div className=\"section\">\n            <div className=\"container \">\n              <div className=\"tile is-ancestor evenly \">\n                <div className=\"tile is-parent  is-4 \">\n                  <div className=\"tile is-child box has-background-primary is-justify-content-center\">\n                    <h2 className=\"title has-text-centered\">\n                      Scan the QR code on your table\n                    </h2>\n                  </div>\n                </div>\n                <div className=\"tile is-parent  is-4 \">\n                  <div className=\"tile is-child box has-background-primary has-text-centered\">\n                    <form\n                      className=\"is-justify-content-center\"\n                      onSubmit={this.handleSubmit}\n                    >\n                      <div className=\"field\">\n                        <label className=\"label\" id=\"table-number\">\n                          Enter your table Number for the Demo:\n                        </label>\n                        <div className=\"control\">\n                          <div className=\"column is-4 is-offset-4\">\n                            <input\n                              className=\"input\"\n                              name=\"tableNumber\"\n                              type=\"number\"\n                              value={this.state.tableNumber}\n                              onChange={this.handleChange}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"field \">\n                        <div className=\"control \">\n                          <button\n                            className=\"button is-link is-large\"\n                            type=\"submit\"\n                          >\n                            Enter\n                          </button>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import axios from \"axios\";\n\n// here we are just maing our code look more DRY. With every backend call we must deal with errors and success states. The idea of creating these kinds of services is to make our lives easier in the components\nfunction internalServerError(err) {\n  console.log(\"err:\", err.response.data);\n  if (err.response && err.response.data && err.response.data.errorMessage) {\n    return {\n      status: false,\n      errorMessage: err.response.data.errorMessage,\n    };\n  }\n  return {\n    status: false,\n    errorMessage: \"Internal server error. Please check your server\",\n  };\n}\n\nfunction successStatus(res) {\n  return {\n    status: true,\n    data: res.data,\n  };\n}\n\n// creates a basic url for every request in this file\nconst authService = axios.create({\n  baseURL: `${process.env.REACT_APP_SERVER_URL}/auth`,\n});\n\nexport function login(credentials) {\n  return authService\n    .post(\"/login\", credentials)\n    .then(successStatus)\n    .catch(internalServerError);\n}\n\nexport function getLoggedIn() {\n  return authService\n    .get(`session`, {\n      headers: {\n        Authorization: localStorage.getItem(\"accessToken\"),\n      },\n    })\n    .then(successStatus)\n    .catch(internalServerError);\n}\n\nexport function signup(credentials) {\n  return authService\n    .post(\"/signup\", credentials)\n    .then(successStatus)\n    .catch(internalServerError);\n}\n\nexport function logout() {\n  return authService\n    .delete(\"/logout\", {\n      headers: {\n        Authorization: localStorage.getItem(\"accessToken\"),\n      },\n    })\n    .then(successStatus)\n    .catch(internalServerError);\n}\n","import React, { Component } from \"react\";\nimport { signup } from \"../services/auth\";\n// import \"./auth.css\";\nimport * as PATHS from \"../utils/paths\";\n\nexport default class Signup extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    error: null,\n  };\n\n  handleInputChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleFormSubmission = (event) => {\n    event.preventDefault();\n    const credentials = {\n      username: this.state.username,\n      password: this.state.password,\n    };\n    signup(credentials).then((res) => {\n      // successful signup\n\n      if (!res.status) {\n        // unsuccessful signup\n      }\n      localStorage.setItem(\"accessToken\", res.data.accessToken);\n      this.props.authenticate(res.data.user);\n      this.props.history.push(PATHS.VIEWALLORDERS);\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Sign Up</h1>\n        <form onSubmit={this.handleFormSubmission} className=\"auth__form\">\n          <label htmlFor=\"input-username\">Username</label>\n          <input\n            id=\"input-username\"\n            type=\"text\"\n            name=\"username\"\n            placeholder=\"Text\"\n            value={this.state.username}\n            onChange={this.handleInputChange}\n            required\n          />\n\n          <label htmlFor=\"input-password\">Password</label>\n          <input\n            id=\"input-password\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={this.state.password}\n            onChange={this.handleInputChange}\n            required\n            minLength=\"8\"\n          />\n\n          {this.state.error && (\n            <div className=\"error-block\">\n              <p>There was an error submiting the form:</p>\n              <p>{this.state.error.message}</p>\n            </div>\n          )}\n\n          <button className=\"button__submit\" type=\"submit\">\n            Submit\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { login } from \"../services/auth\";\nimport \"./Signup\";\nimport * as PATHS from \"../utils/paths\";\n\nexport default class Login extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    error: null,\n  };\n\n  handleInputChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleFormSubmission = (event) => {\n    event.preventDefault();\n\n    const credentials = {\n      username: this.state.username,\n      password: this.state.password,\n    };\n    login(credentials).then((res) => {\n      if (!res.status) {\n        // handle not great request\n      }\n      localStorage.setItem(\"accessToken\", res.data.accessToken);\n      this.props.authenticate(res.data.user);\n      this.props.history.push(PATHS.VIEWALLORDERS);\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Log In</h1>\n        <form onSubmit={this.handleFormSubmission} className=\"signup__form\">\n          <label htmlFor=\"input-username\">Username</label>\n          <input\n            id=\"input-username\"\n            type=\"text\"\n            name=\"username\"\n            placeholder=\"username\"\n            value={this.state.username}\n            onChange={this.handleInputChange}\n            required\n          />\n\n          <label htmlFor=\"input-password\">Password</label>\n          <input\n            id=\"input-password\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={this.state.password}\n            onChange={this.handleInputChange}\n            required\n            minLength=\"8\"\n          />\n\n          {this.state.error && (\n            <div className=\"error-block\">\n              <p>There was an error submiting the form:</p>\n              <p>{this.state.error.message}</p>\n            </div>\n          )}\n\n          <button className=\"button__submit\" type=\"submit\">\n            Submit\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\n// this kind of component is a `wrapper` around the React router dom Route where we immediately pass every single prop down. Instead of writing things with the render\nconst NormalRoute = ({ exact, to, path, component, ...componentProps }) => {\n  const Component = component;\n  return (\n    <Route\n      exact={exact}\n      to={to}\n      path={path}\n      render={(props) => <Component {...componentProps} {...props} />}\n    />\n  );\n};\n\nexport default NormalRoute;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport * as PATHS from \"../utils/paths\";\n\n// the protected route component must take a user in order to check if the user is authenticated or not. If not moves the user to the login page\nconst ProtectedRoute = ({ user, exact, to, component, ...componentProps }) => {\n  const Component = component;\n  if (!user) {\n    return <Redirect to={PATHS.HOMEPAGE} />;\n  }\n  return (\n    <Route\n      exact={exact}\n      to={to}\n      render={(props) => (\n        <Component {...componentProps} {...props} user={user} />\n      )}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// import \"./AdminNavbar.css\";\nimport * as PATHS from \"../../utils/paths\";\n\nexport default function AdminNavbar(props) {\n  return (\n    <div>\n      <nav className=\"admin-navbar\">\n        <Link to={PATHS.VIEWALLORDERS}>View All Orders</Link>\n\n        <Link to={PATHS.CREATEMENU}>Edit your menu</Link>\n\n        <Link to={PATHS.CREATEDISH}>Create new dish</Link>\n\n        <button onClick={props.handleLogout}>Logout</button>\n      </nav>\n    </div>\n  );\n}\n","import AdminNavbar from \"../../components/AdminNavbar/AdminNavbar\";\nimport React, { Component } from \"react\";\nimport { getAllOrders, clearTable } from \"../../services/order\";\nimport \"./Admin.css\";\n\nexport default class ViewAllOrders extends Component {\n  state = {\n    orders: null,\n  };\n\n  componentDidMount = () => {\n    getAllOrders().then((orders) => {\n      this.setState({ orders: orders });\n    });\n  };\n\n  handleClear = (table) => {\n    clearTable({ table: table }).then((orders) => {\n      getAllOrders().then((orders) => {\n        this.setState({ orders: orders });\n      });\n      // this.setState({ orders: orders });\n    });\n  };\n\n  render() {\n    if (!this.state.orders) {\n      return <div>NO ORDERS ...</div>;\n    }\n    return (\n      <div>\n        <AdminNavbar handleLogout={this.props.handleLogout} />\n        <div className=\"viewallorders-container\">\n          {this.state.orders.map((el, index) => (\n            <div className=\"allOrders-container\">\n              <h2>table: {el.table}</h2>\n\n              {el.dishesOrdered.map((val) => (\n                <div>\n                  <tr>\n                    <td>{val.units}</td>\n                    <td>\n                      {\"  \"}\n                      &nbsp;&nbsp; {val.dishType.name}\n                    </td>\n                  </tr>\n                </div>\n              ))}\n              <button onClick={() => this.handleClear(el.table)}>\n                Clear order\n              </button>\n            </div>\n          ))}\n\n          {/* <table>\n            <tr>\n              <th>\n                <h2>Item</h2>\n              </th>\n              <th>\n                <h2>Units</h2>\n              </th>\n             \n            </tr>\n            {this.props.order.dishesOrdered.map((el) => (\n              <tr>\n                <td>\n                  <h3>{el.dishType.name}</h3>\n                </td>\n                <td>\n                  {\" \"}\n                  <h3>{el.units} u.</h3>\n                </td>\n               \n              </tr>\n            ))}\n          </table> */}\n        </div>\n      </div>\n    );\n  }\n}\n","import axios from \"axios\";\n\nfunction internalServerError(err) {\n  console.log(\"err:\", err.response.data);\n  if (err.response && err.response.data && err.response.data.errorMessage) {\n    return {\n      status: false,\n      errorMessage: err.response.data.errorMessage,\n    };\n  }\n  return {\n    status: false,\n    errorMessage: \"Internal server error. Please check your server\",\n  };\n}\n\nfunction successStatus(res) {\n  return {\n    status: true,\n    data: res.data,\n  };\n}\n\nconst menuService = axios.create({\n  baseURL: `${process.env.REACT_APP_SERVER_URL}`,\n});\n\nexport function addNewDish(dish) {\n  return menuService\n    .post(\"/newDish\", dish)\n    .then((successStatus) => {\n      console.log(successStatus);\n    })\n    .catch(internalServerError);\n}\n\nexport function addDishToMenu(dish) {\n  return menuService\n    .post(\"/addDishToMenu\", dish)\n    .then((res) => {\n      return res.data;\n    })\n    .catch(internalServerError);\n}\n\nexport function removeDishFromMenu(dish) {\n  return menuService\n    .post(\"/removeDishFromMenu\", dish)\n    .then((res) => {\n      return res.data;\n    })\n    .catch(internalServerError);\n}\n\nexport function getAllDishes() {\n  return menuService\n    .get(\"/getAllDishes\")\n    .then((res) => res.data)\n    .catch(internalServerError);\n}\n\nexport function getMenu() {\n  return menuService\n    .get(\"/getMenu\")\n    .then((res) => res.data)\n    .catch(internalServerError);\n}\n","import AdminNavbar from \"../../components/AdminNavbar/AdminNavbar\";\nimport \"./Admin.css\";\n\nimport React, { Component } from \"react\";\nimport {\n  getAllDishes,\n  addDishToMenu,\n  getMenu,\n  removeDishFromMenu,\n} from \"../../services/menu\";\nimport { findDOMNode } from \"react-dom\";\nexport default class CreateMenu extends Component {\n  state = {\n    dishes: [],\n    selectedDishName: \"\",\n    menu: [],\n    user: \"\",\n    isLoading: true,\n  };\n\n  componentDidMount = () => {\n    console.log(\"what is the data in this.props.user?\", this.props.user);\n    getAllDishes().then((responseBack) => {\n      this.setState({ dishes: responseBack, user: this.props.user });\n    });\n    getMenu().then((responseback) => {\n      this.setState({ menu: responseback, isLoading: false });\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const filteredDish = this.state.dishes.filter((el) => {\n      return el.name === this.state.selectedDishName;\n    });\n\n    const filteredDishAndUser = {\n      filteredDish: filteredDish,\n      user: this.state.user,\n    };\n\n    addDishToMenu(filteredDishAndUser).then((res) => {\n      this.setState({\n        menu: res,\n      });\n    });\n  };\n\n  handleRemove = (event) => {\n    event.preventDefault();\n\n    console.log(\"this.state.selectedDishName\", this.state.selectedDishName);\n    const filteredDish = this.state.dishes.filter((el) => {\n      //   console.log(\n      //     `el.name: ${el.name} and this.state.selectedDishName: ${this.state.selectedDishName}`\n      //   );\n      return el.name === this.state.selectedDishName;\n    });\n\n    const filteredDishAndUser = {\n      filteredDish: filteredDish,\n      user: this.state.user,\n    };\n\n    removeDishFromMenu(filteredDishAndUser).then((res) => {\n      this.setState({\n        menu: res,\n      });\n    });\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      selectedDishName: event.target.value,\n    });\n  };\n\n  render() {\n    const allDishes = this.state.dishes;\n    if (this.state.isLoading) {\n      return <div>Loading ...</div>;\n    }\n\n    return (\n      <div>\n        <AdminNavbar\n          handleLogout={this.props.handleLogout}\n          onChange={this.handleChange}\n        />\n        <div className=\"createMenuContainer\">\n          <form onSubmit={this.handleSubmit}>\n            <label id=\"dish\">Select the dish to add:</label>\n            <select\n              name=\"SelectedDishName\"\n              id=\"dish\"\n              value={this.state.selectedDishName}\n              onChange={this.handleChange}\n            >\n              {allDishes.map((el) => (\n                <option>{el.name}</option>\n              ))}\n            </select>\n            <button id=\"green\" type=\"submit\">\n              Add to menu\n            </button>\n          </form>\n          <div className=\"createMenuContainer\">\n            <h1>Current Menu</h1>\n\n            {this.state.menu[0].dishes.map((el) => (\n              <div>{el.name}</div>\n            ))}\n          </div>\n          <form onSubmit={this.handleRemove}>\n            <label id=\"dish\">Select the dish to remove:</label>\n            <select\n              name=\"SelectedDishName\"\n              id=\"dish\"\n              value={this.state.selectedDishName}\n              onChange={this.handleChange}\n            >\n              {allDishes.map((el) => (\n                <option>{el.name}</option>\n              ))}\n            </select>\n            <button id=\"red\" type=\"submit\">\n              Remove\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","import AdminNavbar from \"../../components/AdminNavbar/AdminNavbar\";\nimport \"./Admin.css\";\nimport React, { Component } from \"react\";\nimport { addNewDish } from \"../../services/menu\";\n\nexport default class CreateDish extends Component {\n  state = {\n    dishes: [],\n    name: \"\",\n    description: \"\",\n    tags: \"\",\n    format: \"\",\n    picture_url: \"\",\n    stock: \"\",\n    type: \"\",\n    price: 0,\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const dish = {\n      name: this.state.name,\n      description: this.state.description,\n\n      tags: this.state.tags,\n\n      format: this.state.format,\n      picture_url: this.state.picture_url,\n      stock: this.state.stock,\n      type: this.state.type,\n      price: this.state.price,\n    };\n    addNewDish(dish).then((res) => {\n      this.setState({\n        dishes: [res, ...this.state.dishes],\n      });\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <AdminNavbar handleLogout={this.props.handleLogout} />\n        <h1 className=\"form-container\">Create a new dish</h1>\n        <form className=\"form-container\" onSubmit={this.handleSubmit}>\n          <label htmlFor=\"name\">Name: </label>\n          <input\n            id=\"name\"\n            name=\"name\"\n            type=\"text\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n          <label htmlFor=\"description\">Description: </label>\n          <input\n            className=\"long\"\n            id=\"description\"\n            name=\"description\"\n            type=\"text\"\n            value={this.state.description}\n            onChange={this.handleChange}\n          />\n          <label htmlFor=\"tags\">Tags: </label>\n          <input\n            id=\"tags\"\n            name=\"tags\"\n            type=\"text\"\n            value={this.state.tags}\n            onChange={this.handleChange}\n          />\n          <label htmlFor=\"format\">Format: </label>\n          <input\n            id=\"format\"\n            name=\"format\"\n            type=\"text\"\n            value={this.state.format}\n            onChange={this.handleChange}\n          />\n          <label htmlFor=\"picture_url\">Picture Url: </label>\n          <input\n            id=\"picture_url\"\n            name=\"picture_url\"\n            type=\"text\"\n            value={this.state.picture_url}\n            onChange={this.handleChange}\n          />\n          <label htmlFor=\"stock\">Stock: </label>\n          <input\n            id=\"stock\"\n            name=\"stock\"\n            type=\"text\"\n            value={this.state.stock}\n            onChange={this.handleChange}\n          />\n          <label htmlFor=\"type\">Type: </label>\n          <input\n            id=\"type\"\n            name=\"type\"\n            type=\"text\"\n            value={this.state.type}\n            onChange={this.handleChange}\n          />\n          <label htmlFor=\"Price\">Price: </label>\n          <input\n            id=\"price\"\n            name=\"price\"\n            type=\"text\"\n            value={this.state.price}\n            onChange={this.handleChange}\n          />\n          <button id=\"button-createdish\" type=\"submit\">\n            Add to your menu\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// import \"./MenuNavbar.css\";\n\nexport default function MenuNavbar(props) {\n  // When the user scrolls the page, execute myFunction\n\n  // Get the navbar\n\n  return (\n    <div className=\"columns \">\n      <div className=\"column is-full is-mobile\">\n        <nav className=\"navbar is-fixed-top has-background-primary\">\n          <div className=\"container\">\n            <h1 className=\"navbar-item navbar-start title is-size-6-mobile\">\n              Table {props.tableNumber}\n            </h1>\n            <Link className=\"navbar-item\" to={`/${props.tableNumber}`}>\n              Menu\n            </Link>\n            <Link className=\"navbar-item\" to={`/${props.tableNumber}/order`}>\n              Order\n            </Link>\n            <Link className=\"navbar-item navbar-end\" to={\"/\"}>\n              Exit\n            </Link>\n          </div>\n        </nav>\n      </div>\n    </div>\n  );\n}\n","// import \"./Dish.css\";\n\nimport React, { Component } from \"react\";\n\nexport default class Dish extends Component {\n  render() {\n    return (\n      <div className=\"box \">\n        <div className=\"level is-mobile\">\n          <div className=\"level-left\">\n            <figure className=\"image is-96x96 level-item\">\n              <img\n                src={this.props.dish.picture_url}\n                alt=\"\"\n                // width=\"100\"\n                // height=\"100\"\n              />\n            </figure>\n            <div className=\"level-item\">\n              <div>\n                <p className=\"  title is-size-4-mobile\">\n                  {this.props.dish.name}\n                </p>\n                <p className=\"heading  is-size-6-mobile\">\n                  {this.props.dish.tags}\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"level-right \">\n            <p className=\"level-item\">{this.props.dish.price} €</p>\n\n            <button\n              className=\"button is-link level-item\"\n              onClick={() =>\n                this.props.handleOrder(\n                  this.props.dish._id,\n                  this.props.tableNumber\n                )\n              }\n            >\n              Order\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n// import \"./TableOrder.css\";\nimport { removeDishFromOrder, getOrder } from \"../../services/order\";\n\nexport default class TableOrder extends Component {\n  price = () => {\n    return this.props.order.dishesOrdered.reduce((acc, el) => {\n      console.log(\n        `el.dishType.price : ${el.dishType.price} and el.units: ${el.units}=>acc:${acc} `\n      );\n      return acc + el.dishType.price * el.units;\n    }, 0);\n  };\n\n  render() {\n    if (this.props.isLoading) {\n      console.log(\"this.state.isLoading before return\", this.state.isLoading1);\n      return <div>Loading ...</div>;\n    }\n    if (!this.props.order) {\n      console.log(\"this.state.isLoading before return\", this.state.isLoading1);\n      return <div>NO ORDERS YET</div>;\n    }\n\n    return (\n      <div className=\"table-order-container mx-0\">\n        {console.log(\"props.order inside Table order\", this.props.order)}\n\n        <table className=\"table has-text-centered mx-0\">\n          <thead className=\"is-size-6-mobile\">\n            <th>\n              <h2 className=\" is-size-6-mobile\">Item</h2>\n            </th>\n            <th>\n              <h2 className=\" is-size-6-mobile \">Units</h2>\n            </th>\n            <th>\n              <h2 className=\" is-size-6-mobile\"></h2>\n            </th>\n            <th>\n              <h2 className=\" is-size-6-mobile\">Total</h2>\n            </th>\n            <th></th>\n          </thead>\n\n          <tbody className=\"has-text-centered\">\n            {this.props.order.dishesOrdered.map((el) => (\n              <tr>\n                <td>\n                  <p>{el.dishType.name}</p>\n                </td>\n                <td>\n                  {\" \"}\n                  <h3>{el.units} u.</h3>\n                </td>\n                <td>\n                  <h3>{el.dishType.price}€/u.</h3>\n                </td>\n                <td>\n                  {\" \"}\n                  <h3> {el.dishType.price * el.units} €</h3>\n                </td>\n                <td>\n                  {!this.props.order.paid ? (\n                    <button\n                      className=\"button is-small is-danger is-light\"\n                      onClick={() =>\n                        this.props.handleRemoveDish(\n                          this.props.order,\n                          el.dishType._id\n                        )\n                      }\n                    >\n                      Remove\n                    </button>\n                  ) : (\n                    <p></p>\n                  )}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n\n        <h2>Total: {this.price()}€</h2>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n// import \"./MenuFooterbar.css\";\n\nexport default class MenuFooterbar extends Component {\n  state = {\n    order: null,\n    price: 0,\n  };\n\n  componentDidMount = () => {\n    this.setState({ order: this.props.order });\n  };\n\n  //componentDidMount = () => {\n  //  // if (this.props.order && this.props.order.dishesOrdered) {\n  //  let price = this.props.order.dishesOrdered.reduce((acc, el) => {\n  //    console.log(\n  //      `el.dishType.price : ${el.dishType.price} and el.units: ${el.units}=>acc:${acc} `\n  //    );\n  //    return acc + el.dishType.price * el.units;\n  //  }, 0);\n  //  console.log(\"prices\", price);\n  //  this.setState({ order: this.props.order, price: price });\n  //};\n\n  //   componentDidUpdate = (prevProps) => {\n  //     if (this.props.isLoading !== prevProps.isLoading) {\n  //       console.log(\"called the component DidUpdate\");\n  //       let price = this.props.order.dishesOrdered.reduce((acc, el) => {\n  //         console.log(\n  //           `el.dishType.price : ${el.dishType.price} and el.units: ${el.units}=>acc:${acc} `\n  //         );\n  //         return acc + el.dishType.price * el.units;\n  //       }, 0);\n  //       console.log(\"price\", price);\n  //       this.setState({ order: this.props.order, price: price });\n  //     }\n  //   };\n\n  render() {\n    return (\n      <div>\n        {(this.state.order && (\n          <nav className=\"navbar is-fixed-bottom\">\n            {\" \"}\n            <h1>\n              Items selected: // {this.state.order.totalItems} Total:{\" \"}\n              {this.state.price} €{console.log(this.props.order)}{\" \"}\n            </h1>{\" \"}\n            {/* <Link to={`/${props.tableNumber}/order`}>Finish your Order</Link> */}{\" \"}\n          </nav>\n        )) || <p>Loading...</p>}\n      </div>\n\n      //     if (this.props.isLoading && !this.props.order) {\n      //         console.log(\"this.state.isLoading before return\", this.props.isLoading);\n      //         return <div>Loading ...</div>;\n      //       }\n      //   <div>\n      //\n      //   </div >\n    );\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\n\nexport default function CheckoutForm(props) {\n  const [succeeded, setSucceeded] = useState(false);\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState(\"\");\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState(\"\");\n  const stripe = useStripe();\n  const elements = useElements();\n  useEffect(() => {\n    // Create PaymentIntent as soon as the page loads\n    window\n      .fetch(\n        `${process.env.REACT_APP_SERVER_URL}/payment/create-payment-intent`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ items: props.tableNumber }),\n        }\n      )\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        setClientSecret(data.clientSecret);\n      });\n  }, []);\n  const cardStyle = {\n    style: {\n      base: {\n        color: \"#32325d\",\n        border: \"1px\",\n        fontFamily: \"Arial, sans-serif\",\n        fontSmoothing: \"antialiased\",\n        fontSize: \"16px\",\n\n        \"::placeholder\": {\n          color: \"#32325d\",\n        },\n      },\n      invalid: {\n        color: \"#fa755a\",\n        iconColor: \"#fa755a\",\n      },\n    },\n  };\n  const handleChange = async (event) => {\n    // Listen for changes in the CardElement\n    // and display any errors as the customer types their card details\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n  const handleSubmit = async (ev) => {\n    ev.preventDefault();\n    setProcessing(true);\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement),\n      },\n    });\n    if (payload.error) {\n      setError(`Payment failed ${payload.error.message}`);\n      setProcessing(false);\n    } else {\n      setError(null);\n      setProcessing(false);\n      setSucceeded(true);\n      props.changeToPaid();\n    }\n  };\n  return (\n    <form id=\"payment-form\" onSubmit={handleSubmit}>\n      <div className=\"field\">\n        <label className=\"label\">Enter your payment details:</label>\n        <div className=\"control\">\n          <CardElement\n            id=\"card-element\"\n            options={cardStyle}\n            onChange={handleChange}\n          />\n        </div>\n      </div>\n      <div className=\"field\">\n        <button\n          className=\"button is-success\"\n          disabled={processing || disabled || succeeded}\n          id=\"submit\"\n        >\n          <span id=\"button-text\">\n            {processing ? <div className=\"spinner\" id=\"spinner\"></div> : \"Pay\"}\n          </span>\n        </button>\n      </div>\n      {/* Show any error that happens when processing the payment */}\n      {error && (\n        <div className=\"card-error\" role=\"alert\">\n          {error}\n        </div>\n      )}\n      {/* Show a success message upon completion */}\n      <p className={succeeded ? \"result-message\" : \"result-message hidden\"}>\n        Payment succeeded! Your food is on the way to your table. Enjoy your\n        mail :)\n      </p>\n    </form>\n  );\n}\n","import React from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport CheckoutForm from \"./CheckOutForm\";\n// import \"./Payment.css\";\n\n// Make sure to call loadStripe outside of a component’s render to avoid\n// recreating the Stripe object on every render.\n// loadStripe is initialized with your real test publishable API key.\n\nconst promise = loadStripe(\n  \"pk_test_51Hw8omAFjvuOhmpP8r2GkrfRJ1nImw1IHoT7Wsp1nPxuPMhB62V2lKL0tB8izdcRTG45RxDN3iYEHKpZb8WALVtA00WUAU57hF\"\n);\n\nexport default function App(props) {\n  return (\n    <div className=\"stripe\">\n      <Elements stripe={promise}>\n        <CheckoutForm\n          tableNumber={props.tableNumber}\n          changeToPaid={props.changeToPaid}\n        />\n      </Elements>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport MenuNavbar from \"../../components/MenuNavbar/MenuNavbar\";\nimport TableOrder from \"../../components/TableOrder/TableOrder\";\nimport Payment from \"../../components/Payment/Payment\";\nimport { getMenu } from \"../../services/menu\";\nimport {\n  addDishToOrder,\n  getOrder,\n  getTotal,\n  changeToPaid,\n  removeDishFromOrder,\n  getAllOrders,\n} from \"../../services/order\";\n\nexport default class OrderPage extends Component {\n  state = {\n    isLoading: true,\n    // isLoading2: true,\n    menu: [],\n    order: null,\n    total: 0,\n  };\n  componentDidMount = () => {\n    Promise.all([\n      getMenu(),\n      getOrder({ table: this.props.match.params.table }),\n    ]).then((responsesBack) => {\n\n\n      this.setState({\n        menu: responsesBack[0],\n        order: responsesBack[1][0],\n        isLoading: false,\n      });\n    });\n  };\n\n  changeToPaid = () => {\n    changeToPaid({ table: this.props.match.params.table }).then(\n      (responseBack) => {\n      \n        this.setState({ order: responseBack[0] });\n      }\n    );\n  };\n\n  handleRemoveDish = (order, dishId) => {\n   \n\n    removeDishFromOrder({ orderId: order._id, dishId: dishId }).then(\n      (order) => {\n    \n\n        this.setState({ order: order[0] });\n      }\n    );\n  };\n\n  handleClick = () => {\n    getTotal({ table: this.props.match.params.table }).then((total) => {\n  \n      this.setState({ total: total });\n    });\n  };\n\n  render() {\n    if (this.state.isLoading) {\n      \n      return <div>Loading ...</div>;\n    }\n\n    const tableNumber = this.props.match.params.table;\n    return (\n      <div className=\"has-navbar-fixed-top\">\n        \n\n        <MenuNavbar tableNumber={tableNumber} />\n        <div className=\"section mx-0\">\n          <TableOrder\n            order={this.state.order}\n            isLoading={this.state.isLoading}\n            handleRemoveDish={this.handleRemoveDish}\n            tableNumber={tableNumber}\n          />\n        </div>\n        <div className=\"section\">\n          <div className=\"container\">\n            {this.state.order.paid ? (\n              <h3 className=\"has-text-success\">\n                Thank you! Your dish is being prepared and soon we will serve\n                you.{\" \"}\n              </h3>\n            ) : (\n              <h3 className=\"has-text-danger\">Pending to pay</h3>\n            )}\n            {this.state.order.paid ? (\n              \"\"\n            ) : (\n              <Payment\n                tableNumber={tableNumber}\n                changeToPaid={this.changeToPaid}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Dish from \"../Dish/Dish\";\nimport { getMenu } from \"../../services/menu\";\nimport MenuFooterbar from \"./../../components/MenuFooterbar/MenuFooterbar\";\nimport OrderPage from \"../../pages/Customer/OrderPage\";\nimport { addDishToOrder, getOrder } from \"../../services/order\";\nimport { Link } from \"react-router-dom\";\n\nexport default class MenuList extends Component {\n  state = {\n    isLoading: true,\n    // isLoading2: true,\n    menu: [],\n    order: null,\n    price: 0,\n    totalItems: 0,\n  };\n  componentDidMount = () => {\n    Promise.all([getMenu(), getOrder({ table: this.props.tableNumber })]).then(\n      (responsesBack) => {\n        let price = 0;\n        if (responsesBack[1][0].dishesOrdered) {\n          price = responsesBack[1][0].dishesOrdered.reduce((acc, el) => {\n            // console.log(\n            //   `el.dishType.price : ${el.dishType.price} and el.units: ${el.units}=>acc:${acc} `\n            // );\n            return acc + el.dishType.price * el.units;\n          }, 0);\n        }\n\n        let units = responsesBack[1][0].dishesOrdered.reduce((acc, el) => {\n          return acc + el.units;\n        }, 0);\n\n        this.setState({\n          menu: responsesBack[0],\n          order: responsesBack[1][0],\n          isLoading: false,\n          price: price,\n          totalItems: units,\n        });\n      }\n    );\n  };\n\n  handleOrder = (dishId, table) => {\n    const dishAndTable = {\n      dishId: dishId,\n      table: table,\n    };\n\n    addDishToOrder(dishAndTable).then((newAndUpdatedOrder) => {\n      let price = newAndUpdatedOrder.dishesOrdered.reduce((acc, el) => {\n        return acc + el.dishType.price * el.units;\n      }, 0);\n\n      let units = newAndUpdatedOrder.dishesOrdered.reduce((acc, el) => {\n        return acc + el.units;\n      }, 0);\n\n      this.setState({\n        order: newAndUpdatedOrder,\n        price: price,\n        totalItems: units,\n      });\n    });\n  };\n\n  render() {\n    if (this.state.isLoading) {\n      return <div>Loading ...</div>;\n    }\n\n    return (\n      <div className=\"container\">\n        {this.state.menu[0].dishes.map((el) => (\n          <div>\n            <Dish\n              key={el.name}\n              dish={el}\n              tableNumber={this.props.tableNumber}\n              handleOrder={this.handleOrder}\n            />\n          </div>\n        ))}\n\n        {(this.state.order && (\n          <nav className=\"navbar is-fixed-bottom\">\n            <div className=\"container\">\n              <h1 className=\"is-size-2 navbar-item is-size-5-mobile\">\n                Items selected:{\" \"}\n                {/*this.state.order.totalItems*/ this.state.totalItems || \"0\"}{\" \"}\n                Total: {this.state.price} €{\" \"}\n              </h1>{\" \"}\n              <button className=\"button is-success navbar-item\">\n                <Link\n                  className=\"has-text-white  is-size-5-mobile\"\n                  to={`/${this.props.tableNumber}/order`}\n                >\n                  Finish\n                </Link>\n              </button>{\" \"}\n            </div>\n          </nav>\n        )) || <p>Loading...</p>}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport MenuNavbar from \"./../../components/MenuNavbar/MenuNavbar\";\nimport MenuList from \"./../../components/MenuList/MenuList\";\n\nimport { Route } from \"react-router-dom\";\n\nexport default class MenuPage extends Component {\n  render() {\n    const tableNumber = this.props.match.params.table;\n\n    return (\n      <div className=\"has-navbar-fixed-top\">\n        <MenuNavbar className=\"section\" tableNumber={tableNumber} />\n\n        <MenuList className=\"section\" tableNumber={tableNumber} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport LoadingComponent from \"./components/Loading\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport HomePage from \"./pages/HomePage\";\nimport LogIn from \"./pages/LogIn\";\nimport ProtectedPage from \"./pages/ProtectedPage\";\nimport Signup from \"./pages/Signup\";\nimport NormalRoute from \"./routing-components/NormalRoute\";\nimport ProtectedRoute from \"./routing-components/ProtectedRoute\";\nimport { getLoggedIn, logout } from \"./services/auth\";\nimport * as PATHS from \"./utils/paths\";\nimport ViewAllOrders from \"./pages/Admin/ViewAllOrders\";\nimport CreateMenu from \"./pages/Admin/CreateMenu\";\nimport CreateDish from \"./pages/Admin/CreateDish\";\nimport MenuPage from \"./pages/Customer/MenuPage\";\nimport OrderPage from \"./pages/Customer/OrderPage\";\nimport { Route } from \"react-router-dom\";\nimport \"./sass/mystyles.scss\";\n\nclass App extends React.Component {\n  state = {\n    user: null,\n    isLoading: true,\n  };\n\n  componentDidMount = () => {\n    const accessToken = localStorage.getItem(\"accessToken\");\n    if (!accessToken) {\n      return this.setState({\n        isLoading: false,\n      });\n    }\n    getLoggedIn(accessToken).then((res) => {\n      if (!res.status) {\n        // console.log(\"RES IN CASE OF FAILURE\", res);\n        // deal with failed backend call\n        return this.setState({\n          isLoading: false,\n        });\n      }\n      this.setState({\n        user: res.data.user,\n        isLoading: false,\n      });\n    });\n  };\n\n  handleLogout = () => {\n    const accessToken = localStorage.getItem(\"accessToken\");\n    if (!accessToken) {\n      return this.setState({\n        user: null,\n        isLoading: false,\n      });\n    }\n    this.setState(\n      {\n        isLoading: true,\n      },\n      () => {\n        logout(accessToken).then((res) => {\n          if (!res.status) {\n            // deal with error here\n            // console.log(\"SOMETHING HAPPENED\", res);\n          }\n\n          localStorage.removeItem(\"accessToken\");\n          return this.setState({\n            isLoading: false,\n            user: null,\n          });\n        });\n      }\n    );\n    // this.props.history.push(`/`);\n  };\n\n  authenticate = (user) => {\n    this.setState({\n      user,\n    });\n  };\n\n  render() {\n    if (this.state.isLoading) {\n      return <LoadingComponent />;\n    }\n\n    return (\n      <div>\n        <Switch>\n          <NormalRoute exact path={PATHS.HOMEPAGE} component={HomePage} />\n          <NormalRoute\n            exact\n            path={PATHS.SIGNUPPAGE}\n            authenticate={this.authenticate}\n            component={Signup}\n          />\n          <NormalRoute\n            exact\n            path={PATHS.LOGINPAGE}\n            authenticate={this.authenticate}\n            component={LogIn}\n          />\n          <NormalRoute\n            exact\n            path={\"/:table/order\"}\n            authenticate={this.authenticate}\n            component={OrderPage}\n          />\n          <NormalRoute\n            exact\n            path={\"/:table\"}\n            authenticate={this.authenticate}\n            component={MenuPage}\n          />\n\n          <ProtectedRoute\n            exact\n            path={PATHS.VIEWALLORDERS}\n            component={ViewAllOrders}\n            user={this.state.user}\n            handleLogout={this.handleLogout}\n          />\n          <ProtectedRoute\n            exact\n            path={PATHS.CREATEMENU}\n            component={CreateMenu}\n            user={this.state.user}\n            handleLogout={this.handleLogout}\n          />\n          <ProtectedRoute\n            exact\n            path={PATHS.CREATEDISH}\n            component={CreateDish}\n            user={this.state.user}\n            handleLogout={this.handleLogout}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}