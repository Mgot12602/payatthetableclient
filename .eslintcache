[{"/home/mgotzens/projects/project3/payatthetable/client/src/index.js":"1","/home/mgotzens/projects/project3/payatthetable/client/src/App.js":"2","/home/mgotzens/projects/project3/payatthetable/client/src/utils/paths.js":"3","/home/mgotzens/projects/project3/payatthetable/client/src/services/auth.js":"4","/home/mgotzens/projects/project3/payatthetable/client/src/pages/HomePage.jsx":"5","/home/mgotzens/projects/project3/payatthetable/client/src/pages/ProtectedPage.jsx":"6","/home/mgotzens/projects/project3/payatthetable/client/src/pages/Signup.jsx":"7","/home/mgotzens/projects/project3/payatthetable/client/src/pages/LogIn.jsx":"8","/home/mgotzens/projects/project3/payatthetable/client/src/routing-components/NormalRoute.jsx":"9","/home/mgotzens/projects/project3/payatthetable/client/src/routing-components/ProtectedRoute.jsx":"10","/home/mgotzens/projects/project3/payatthetable/client/src/components/Navbar/Navbar.jsx":"11","/home/mgotzens/projects/project3/payatthetable/client/src/components/Loading/index.jsx":"12","/home/mgotzens/projects/project3/payatthetable/client/src/pages/Admin/CreateMenu.jsx":"13","/home/mgotzens/projects/project3/payatthetable/client/src/pages/Admin/CreateDish.jsx":"14","/home/mgotzens/projects/project3/payatthetable/client/src/pages/Admin/ViewAllOrders.jsx":"15","/home/mgotzens/projects/project3/payatthetable/client/src/pages/Customer/MenuPage.jsx":"16","/home/mgotzens/projects/project3/payatthetable/client/src/components/MenuNavbar/MenuNavbar.jsx":"17","/home/mgotzens/projects/project3/payatthetable/client/src/components/MenuList/MenuList.jsx":"18","/home/mgotzens/projects/project3/payatthetable/client/src/components/MenuFooterbar/MenuFooterbar.jsx":"19","/home/mgotzens/projects/project3/payatthetable/client/src/pages/Customer/OrderPage.jsx":"20","/home/mgotzens/projects/project3/payatthetable/client/src/components/Payment/Payment.jsx":"21","/home/mgotzens/projects/project3/payatthetable/client/src/components/TableOrder/TableOrder.jsx":"22","/home/mgotzens/projects/project3/payatthetable/client/src/components/AdminNavbar/AdminNavbar.jsx":"23","/home/mgotzens/projects/project3/payatthetable/client/src/services/menu.js":"24","/home/mgotzens/projects/project3/payatthetable/client/src/components/Dish/Dish.jsx":"25","/home/mgotzens/projects/project3/payatthetable/client/src/services/order.js":"26","/home/mgotzens/projects/project3/payatthetable/client/src/components/Payment/CheckOutForm.jsx":"27"},{"size":315,"mtime":1609238286550,"results":"28","hashOfConfig":"29"},{"size":3786,"mtime":1609242752372,"results":"30","hashOfConfig":"29"},{"size":262,"mtime":1607594711233,"results":"31","hashOfConfig":"29"},{"size":1594,"mtime":1608041160668,"results":"32","hashOfConfig":"29"},{"size":3803,"mtime":1609324740463,"results":"33","hashOfConfig":"29"},{"size":174,"mtime":1607515847804,"results":"34","hashOfConfig":"29"},{"size":2060,"mtime":1609238318710,"results":"35","hashOfConfig":"29"},{"size":2012,"mtime":1607595788483,"results":"36","hashOfConfig":"29"},{"size":534,"mtime":1607515847782,"results":"37","hashOfConfig":"29"},{"size":645,"mtime":1607610999404,"results":"38","hashOfConfig":"29"},{"size":1976,"mtime":1609415718250,"results":"39","hashOfConfig":"29"},{"size":344,"mtime":1607515847839,"results":"40","hashOfConfig":"29"},{"size":4404,"mtime":1608203125998,"results":"41","hashOfConfig":"29"},{"size":3345,"mtime":1608208169407,"results":"42","hashOfConfig":"29"},{"size":2327,"mtime":1608206099322,"results":"43","hashOfConfig":"29"},{"size":554,"mtime":1609414000578,"results":"44","hashOfConfig":"29"},{"size":970,"mtime":1609414679487,"results":"45","hashOfConfig":"29"},{"size":3698,"mtime":1609353272079,"results":"46","hashOfConfig":"29"},{"size":2071,"mtime":1609322957743,"results":"47","hashOfConfig":"29"},{"size":2893,"mtime":1609254385901,"results":"48","hashOfConfig":"29"},{"size":869,"mtime":1609253671796,"results":"49","hashOfConfig":"29"},{"size":2430,"mtime":1609253629194,"results":"50","hashOfConfig":"29"},{"size":521,"mtime":1609253719174,"results":"51","hashOfConfig":"29"},{"size":1639,"mtime":1608044422955,"results":"52","hashOfConfig":"29"},{"size":1342,"mtime":1609360555896,"results":"53","hashOfConfig":"29"},{"size":2641,"mtime":1608151218759,"results":"54","hashOfConfig":"29"},{"size":2996,"mtime":1608129517388,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"rpwibf",{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"58"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"58"},"/home/mgotzens/projects/project3/payatthetable/client/src/index.js",[],["123","124"],"/home/mgotzens/projects/project3/payatthetable/client/src/App.js",["125","126","127"],"import React from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport LoadingComponent from \"./components/Loading\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport HomePage from \"./pages/HomePage\";\nimport LogIn from \"./pages/LogIn\";\nimport ProtectedPage from \"./pages/ProtectedPage\";\nimport Signup from \"./pages/Signup\";\nimport NormalRoute from \"./routing-components/NormalRoute\";\nimport ProtectedRoute from \"./routing-components/ProtectedRoute\";\nimport { getLoggedIn, logout } from \"./services/auth\";\nimport * as PATHS from \"./utils/paths\";\nimport ViewAllOrders from \"./pages/Admin/ViewAllOrders\";\nimport CreateMenu from \"./pages/Admin/CreateMenu\";\nimport CreateDish from \"./pages/Admin/CreateDish\";\nimport MenuPage from \"./pages/Customer/MenuPage\";\nimport OrderPage from \"./pages/Customer/OrderPage\";\nimport { Route } from \"react-router-dom\";\n\nclass App extends React.Component {\n  state = {\n    user: null,\n    isLoading: true,\n  };\n\n  componentDidMount = () => {\n    const accessToken = localStorage.getItem(\"accessToken\");\n    if (!accessToken) {\n      return this.setState({\n        isLoading: false,\n      });\n    }\n    getLoggedIn(accessToken).then((res) => {\n      if (!res.status) {\n        console.log(\"RES IN CASE OF FAILURE\", res);\n        // deal with failed backend call\n        return this.setState({\n          isLoading: false,\n        });\n      }\n      this.setState({\n        user: res.data.user,\n        isLoading: false,\n      });\n    });\n  };\n\n  handleLogout = () => {\n    const accessToken = localStorage.getItem(\"accessToken\");\n    if (!accessToken) {\n      return this.setState({\n        user: null,\n        isLoading: false,\n      });\n    }\n    this.setState(\n      {\n        isLoading: true,\n      },\n      () => {\n        logout(accessToken).then((res) => {\n          if (!res.status) {\n            // deal with error here\n            console.log(\"SOMETHING HAPPENED\", res);\n          }\n\n          localStorage.removeItem(\"accessToken\");\n          return this.setState({\n            isLoading: false,\n            user: null,\n          });\n        });\n      }\n    );\n    // this.props.history.push(`/`);\n  };\n\n  authenticate = (user) => {\n    this.setState({\n      user,\n    });\n  };\n\n  render() {\n    if (this.state.isLoading) {\n      return <LoadingComponent />;\n    }\n\n    return (\n      <div>\n        <Switch>\n          <NormalRoute exact path={PATHS.HOMEPAGE} component={HomePage} />\n          <NormalRoute\n            exact\n            path={PATHS.SIGNUPPAGE}\n            authenticate={this.authenticate}\n            component={Signup}\n          />\n          <NormalRoute\n            exact\n            path={PATHS.LOGINPAGE}\n            authenticate={this.authenticate}\n            component={LogIn}\n          />\n          <NormalRoute\n            exact\n            path={\"/:table/order\"}\n            authenticate={this.authenticate}\n            component={OrderPage}\n          />\n          <NormalRoute\n            exact\n            path={\"/:table\"}\n            authenticate={this.authenticate}\n            component={MenuPage}\n          />\n\n          <ProtectedRoute\n            exact\n            path={PATHS.VIEWALLORDERS}\n            component={ViewAllOrders}\n            user={this.state.user}\n            handleLogout={this.handleLogout}\n          />\n          <ProtectedRoute\n            exact\n            path={PATHS.CREATEMENU}\n            component={CreateMenu}\n            user={this.state.user}\n            handleLogout={this.handleLogout}\n          />\n          <ProtectedRoute\n            exact\n            path={PATHS.CREATEDISH}\n            component={CreateDish}\n            user={this.state.user}\n            handleLogout={this.handleLogout}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/home/mgotzens/projects/project3/payatthetable/client/src/utils/paths.js",[],"/home/mgotzens/projects/project3/payatthetable/client/src/services/auth.js",[],"/home/mgotzens/projects/project3/payatthetable/client/src/pages/HomePage.jsx",["128"],"import logo from \"../logo.svg\";\nimport \"../App.css\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport { addNewOrder } from \"../services/order\";\n\nimport React, { Component } from \"react\";\n\nexport default class HomePage extends Component {\n  state = {\n    tableNumber: 0,\n  };\n\n  handleChange = (event) => {\n    console.log(event.target.name, \": \", event.target.value);\n\n    this.setState({\n      tableNumber: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const table = { table: this.state.tableNumber };\n    addNewOrder(table)\n      .then((order) => {\n        console.log(\"this is the created order\", order);\n      })\n      .then(() => {\n        // addNewOrder(this.state.table).then((res) => {\n        //   this.setState({\n        //     tables: [res, ...this.state.tables],\n        //   });\n        // });\n\n        this.props.history.push(`/${this.state.tableNumber}`);\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"hero is-fullheight-with-navbar\">\n        <Navbar handleLogout={this.handleLogout} user={this.state.user} />\n\n        <div\n          className=\"section main-image\"\n          style={{\n            backgroundImage: `url(/images/coolrestaurant.jpg)`,\n          }}\n        >\n          <section className=\"section\">\n            <div className=\"tile-ancestor\">\n              <div className=\"tile is-parent is-justify-content-center\">\n                <div className=\"tile is-child box has-text-centered has-background-primary is-4 is-justify-content-center\">\n                  <h1 className=\"title \">The Iron Restaurant</h1>\n                </div>\n              </div>\n            </div>\n          </section>\n          <div className=\"section\">\n            <div className=\"container \">\n              <div className=\"tile is-ancestor evenly \">\n                <div className=\"tile is-parent  is-4 \">\n                  <div className=\"tile is-child box has-background-primary is-justify-content-center\">\n                    <h2 className=\"title has-text-centered\">\n                      Scan the QR code on your table\n                    </h2>\n                  </div>\n                </div>\n                <div className=\"tile is-parent  is-4 \">\n                  <div className=\"tile is-child box has-background-primary has-text-centered\">\n                    <form\n                      className=\"is-justify-content-center\"\n                      onSubmit={this.handleSubmit}\n                    >\n                      <div className=\"field\">\n                        <label className=\"label\" id=\"table-number\">\n                          Enter your table Number for the Demo:\n                        </label>\n                        <div className=\"control\">\n                          <div className=\"column is-4 is-offset-4\">\n                            <input\n                              className=\"input\"\n                              name=\"tableNumber\"\n                              type=\"number\"\n                              value={this.state.tableNumber}\n                              onChange={this.handleChange}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"field \">\n                        <div className=\"control \">\n                          <button\n                            className=\"button is-link is-large\"\n                            type=\"submit\"\n                          >\n                            Enter\n                          </button>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","/home/mgotzens/projects/project3/payatthetable/client/src/pages/ProtectedPage.jsx",[],"/home/mgotzens/projects/project3/payatthetable/client/src/pages/Signup.jsx",[],"/home/mgotzens/projects/project3/payatthetable/client/src/pages/LogIn.jsx",[],"/home/mgotzens/projects/project3/payatthetable/client/src/routing-components/NormalRoute.jsx",[],"/home/mgotzens/projects/project3/payatthetable/client/src/routing-components/ProtectedRoute.jsx",[],"/home/mgotzens/projects/project3/payatthetable/client/src/components/Navbar/Navbar.jsx",["129","130"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n// import \"./Navbar.css\";\nimport * as PATHS from \"../../utils/paths\";\n\n////EVENT LISTENER///\n\nconst Navbar = (props) => {\n  const [isActive, setisActive] = React.useState(\"\");\n\n  console.log(\"isActive\", isActive);\n\n  return (\n    <nav className=\"navbar has-background-primary is-fixed-top\">\n      <div className=\"container\">\n        <div className=\"navbar-start\">\n          <Link to=\"/\" className=\" navbar-item is-size-3\">\n            Pay at the table App\n          </Link>\n        </div>\n        <div className=\"navbar-end\">\n          {props.user ? (\n            <>\n              <Link to={PATHS.VIEWALLORDERS} className=\" navbar-item\">\n                View All Orders\n              </Link>\n\n              <Link to={PATHS.CREATEMENU} className=\" navbar-item\">\n                Edit your menu\n              </Link>\n\n              <Link to={PATHS.CREATEDISH} className=\" navbar-item\">\n                Create new dish\n              </Link>\n              <button className=\" navbar-item\" onClick={props.handleLogout}>\n                Logout\n              </button>\n            </>\n          ) : (\n            <>\n              <div\n                className={`navbar-item has-dropdown ${\n                  isActive ? \"is-active\" : \"\"\n                }`}\n              >\n                <a\n                  onClick={() => setisActive(!isActive)}\n                  className=\"navbar-link\"\n                >\n                  Admin Access\n                </a>\n                <div className=\"navbar-dropdown is-boxed\">\n                  <Link to=\"/auth/signup\" className=\"navbar-item\">\n                    Join?\n                  </Link>\n                  <Link to=\"/auth/login\" className=\"navbar-item\">\n                    Log In\n                  </Link>\n                </div>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","/home/mgotzens/projects/project3/payatthetable/client/src/components/Loading/index.jsx",[],"/home/mgotzens/projects/project3/payatthetable/client/src/pages/Admin/CreateMenu.jsx",["131"],"import AdminNavbar from \"../../components/AdminNavbar/AdminNavbar\";\nimport \"./Admin.css\";\n\nimport React, { Component } from \"react\";\nimport {\n  getAllDishes,\n  addDishToMenu,\n  getMenu,\n  removeDishFromMenu,\n} from \"../../services/menu\";\nimport { findDOMNode } from \"react-dom\";\nexport default class CreateMenu extends Component {\n  state = {\n    dishes: [],\n    selectedDishName: \"\",\n    menu: [],\n    user: \"\",\n    isLoading: true,\n  };\n\n  componentDidMount = () => {\n    console.log(\"what is the data in this.props.user?\", this.props.user);\n    getAllDishes().then((responseBack) => {\n      console.log(\"responseBack:\", responseBack);\n      this.setState({ dishes: responseBack, user: this.props.user });\n    });\n    getMenu().then((responseback) => {\n      console.log(\"get menu in line 22 CreateMenu.jsx\", this.state.menu);\n      this.setState({ menu: responseback, isLoading: false });\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    console.log(\"this.state.selectedDishName\", this.state.selectedDishName);\n    const filteredDish = this.state.dishes.filter((el) => {\n      //   console.log(\n      //     `el.name: ${el.name} and this.state.selectedDishName: ${this.state.selectedDishName}`\n      //   );\n      return el.name === this.state.selectedDishName;\n    });\n    console.log(\"what is filtered dish:\", filteredDish);\n    const filteredDishAndUser = {\n      filteredDish: filteredDish,\n      user: this.state.user,\n    };\n\n    addDishToMenu(filteredDishAndUser).then((res) => {\n      this.setState({\n        menu: res,\n      });\n    });\n  };\n\n  handleRemove = (event) => {\n    event.preventDefault();\n\n    console.log(\"this.state.selectedDishName\", this.state.selectedDishName);\n    const filteredDish = this.state.dishes.filter((el) => {\n      //   console.log(\n      //     `el.name: ${el.name} and this.state.selectedDishName: ${this.state.selectedDishName}`\n      //   );\n      return el.name === this.state.selectedDishName;\n    });\n    console.log(\"what is filtered dish:\", filteredDish);\n    const filteredDishAndUser = {\n      filteredDish: filteredDish,\n      user: this.state.user,\n    };\n\n    removeDishFromMenu(filteredDishAndUser).then((res) => {\n      this.setState({\n        menu: res,\n      });\n    });\n  };\n\n  handleChange = (event) => {\n    console.log(event.target.name, \": \", event.target.value);\n    this.setState({\n      selectedDishName: event.target.value,\n    });\n  };\n\n  render() {\n    const allDishes = this.state.dishes;\n    if (this.state.isLoading) {\n      console.log(\"this.state.isLoading before return\", this.state.isLoading);\n      return <div>Loading ...</div>;\n    }\n\n    return (\n      <div>\n        {console.log(\n          \"this.state.isLoading inside return\",\n          this.state.isLoading\n        )}\n        <AdminNavbar\n          handleLogout={this.props.handleLogout}\n          onChange={this.handleChange}\n        />\n        <div className=\"createMenuContainer\">\n          <form onSubmit={this.handleSubmit}>\n            <label id=\"dish\">Select the dish to add:</label>\n            <select\n              name=\"SelectedDishName\"\n              id=\"dish\"\n              value={this.state.selectedDishName}\n              onChange={this.handleChange}\n            >\n              {console.log(this.state.dishes)}\n              {allDishes.map((el) => (\n                <option>{el.name}</option>\n              ))}\n            </select>\n            <button id=\"green\" type=\"submit\">\n              Add to menu\n            </button>\n          </form>\n          <div className=\"createMenuContainer\">\n            <h1>Current Menu</h1>\n            {console.log(\"this.state.menu\", this.state.menu)}\n\n            {this.state.menu[0].dishes.map((el) => (\n              <div>{el.name}</div>\n            ))}\n          </div>\n          <form onSubmit={this.handleRemove}>\n            <label id=\"dish\">Select the dish to remove:</label>\n            <select\n              name=\"SelectedDishName\"\n              id=\"dish\"\n              value={this.state.selectedDishName}\n              onChange={this.handleChange}\n            >\n              {console.log(this.state.dishes)}\n              {allDishes.map((el) => (\n                <option>{el.name}</option>\n              ))}\n            </select>\n            <button id=\"red\" type=\"submit\">\n              Remove\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","/home/mgotzens/projects/project3/payatthetable/client/src/pages/Admin/CreateDish.jsx",[],"/home/mgotzens/projects/project3/payatthetable/client/src/pages/Admin/ViewAllOrders.jsx",[],"/home/mgotzens/projects/project3/payatthetable/client/src/pages/Customer/MenuPage.jsx",["132"],"import React, { Component } from \"react\";\nimport MenuNavbar from \"./../../components/MenuNavbar/MenuNavbar\";\nimport MenuList from \"./../../components/MenuList/MenuList\";\n\nimport { Route } from \"react-router-dom\";\n\nexport default class MenuPage extends Component {\n  render() {\n    const tableNumber = this.props.match.params.table;\n\n    return (\n      <div className=\"has-navbar-fixed-top\">\n        <MenuNavbar className=\"section\" tableNumber={tableNumber} />\n\n        <MenuList className=\"section\" tableNumber={tableNumber} />\n      </div>\n    );\n  }\n}\n","/home/mgotzens/projects/project3/payatthetable/client/src/components/MenuNavbar/MenuNavbar.jsx",[],"/home/mgotzens/projects/project3/payatthetable/client/src/components/MenuList/MenuList.jsx",["133","134"],"import React, { Component } from \"react\";\nimport Dish from \"../Dish/Dish\";\nimport { getMenu } from \"../../services/menu\";\nimport MenuFooterbar from \"./../../components/MenuFooterbar/MenuFooterbar\";\nimport OrderPage from \"../../pages/Customer/OrderPage\";\nimport { addDishToOrder, getOrder } from \"../../services/order\";\nimport { Link } from \"react-router-dom\";\n\nexport default class MenuList extends Component {\n  state = {\n    isLoading: true,\n    // isLoading2: true,\n    menu: [],\n    order: null,\n    price: 0,\n    totalItems: 0,\n  };\n  componentDidMount = () => {\n    Promise.all([getMenu(), getOrder({ table: this.props.tableNumber })]).then(\n      (responsesBack) => {\n        console.log(\"LOOK HERE MARC\", responsesBack[1][0]);\n        let price = 0;\n        if (responsesBack[1][0].dishesOrdered) {\n          price = responsesBack[1][0].dishesOrdered.reduce((acc, el) => {\n            // console.log(\n            //   `el.dishType.price : ${el.dishType.price} and el.units: ${el.units}=>acc:${acc} `\n            // );\n            return acc + el.dishType.price * el.units;\n          }, 0);\n          console.log(\"price\", price);\n        }\n\n        let units = responsesBack[1][0].dishesOrdered.reduce((acc, el) => {\n          return acc + el.units;\n        }, 0);\n\n        console.log(\"units\", units);\n\n        this.setState({\n          menu: responsesBack[0],\n          order: responsesBack[1][0],\n          isLoading: false,\n          price: price,\n          totalItems: units,\n        });\n      }\n    );\n  };\n\n  handleOrder = (dishId, table) => {\n    const dishAndTable = {\n      dishId: dishId,\n      table: table,\n    };\n\n    console.log(\"onclick function was executed\");\n\n    addDishToOrder(dishAndTable).then((newAndUpdatedOrder) => {\n      console.log(\"This is the updated order\", newAndUpdatedOrder);\n      let price = newAndUpdatedOrder.dishesOrdered.reduce((acc, el) => {\n        console.log(\n          `el.dishType.price : ${el.dishType.price} and el.units: ${el.units}=>acc:${acc} `\n        );\n        return acc + el.dishType.price * el.units;\n      }, 0);\n      console.log(\"price\", price);\n\n      let units = newAndUpdatedOrder.dishesOrdered.reduce((acc, el) => {\n        return acc + el.units;\n      }, 0);\n\n      console.log(\"units\", units);\n      this.setState({\n        order: newAndUpdatedOrder,\n        price: price,\n        totalItems: units,\n      });\n    });\n  };\n\n  render() {\n    if (this.state.isLoading) {\n      console.log(\"this.state.isLoading before return\", this.state.isLoading1);\n      return <div>Loading ...</div>;\n    }\n    console.log(\"order\", this.state.order);\n    return (\n      <div className=\"container\">\n        {this.state.menu[0].dishes.map((el) => (\n          <div>\n            <Dish\n              key={el.name}\n              dish={el}\n              tableNumber={this.props.tableNumber}\n              handleOrder={this.handleOrder}\n            />\n          </div>\n        ))}\n\n        {(this.state.order && (\n          <nav className=\"navbar is-fixed-bottom\">\n            <div className=\"container\">\n              <h1 className=\"is-size-2 navbar-item\">\n                Items selected:{\" \"}\n                {/*this.state.order.totalItems*/ this.state.totalItems || \"0\"}{\" \"}\n                Total: {this.state.price} €{\" \"}\n              </h1>{\" \"}\n              <button className=\"button is-success navbar-item\">\n                <Link\n                  className=\"has-text-white\"\n                  to={`/${this.props.tableNumber}/order`}\n                >\n                  Finish your Order\n                </Link>\n              </button>{\" \"}\n            </div>\n          </nav>\n        )) || <p>Loading...</p>}\n      </div>\n    );\n  }\n}\n","/home/mgotzens/projects/project3/payatthetable/client/src/components/MenuFooterbar/MenuFooterbar.jsx",[],["135","136"],"/home/mgotzens/projects/project3/payatthetable/client/src/pages/Customer/OrderPage.jsx",["137","138"],"import React, { Component } from \"react\";\nimport MenuNavbar from \"../../components/MenuNavbar/MenuNavbar\";\nimport TableOrder from \"../../components/TableOrder/TableOrder\";\nimport Payment from \"../../components/Payment/Payment\";\nimport { getMenu } from \"../../services/menu\";\nimport {\n  addDishToOrder,\n  getOrder,\n  getTotal,\n  changeToPaid,\n  removeDishFromOrder,\n  getAllOrders,\n} from \"../../services/order\";\n\nexport default class OrderPage extends Component {\n  state = {\n    isLoading: true,\n    // isLoading2: true,\n    menu: [],\n    order: null,\n    total: 0,\n  };\n  componentDidMount = () => {\n    Promise.all([\n      getMenu(),\n      getOrder({ table: this.props.match.params.table }),\n    ]).then((responsesBack) => {\n      console.log(\"responsesBackInDidMount\", responsesBack);\n\n      this.setState({\n        menu: responsesBack[0],\n        order: responsesBack[1][0],\n        isLoading: false,\n      });\n    });\n  };\n\n  changeToPaid = () => {\n    changeToPaid({ table: this.props.match.params.table }).then(\n      (responseBack) => {\n        console.log(\"this is the responseback in ChangeToPaid:\", responseBack);\n        this.setState({ order: responseBack[0] });\n      }\n    );\n  };\n\n  handleRemoveDish = (order, dishId) => {\n    console.log(\"this is order in handleRemove \", order);\n    console.log(\"this is dishId in handleRemove \", dishId);\n\n    removeDishFromOrder({ orderId: order._id, dishId: dishId }).then(\n      (order) => {\n        console.log(\"received orders after removing\", order);\n\n        this.setState({ order: order[0] });\n      }\n    );\n  };\n\n  handleClick = () => {\n    getTotal({ table: this.props.match.params.table }).then((total) => {\n      console.log(\"getTotal\", total);\n      this.setState({ total: total });\n    });\n  };\n\n  render() {\n    if (this.state.isLoading) {\n      console.log(\"this.state.isLoading before return\", this.state.isLoading);\n      return <div>Loading ...</div>;\n    }\n\n    const tableNumber = this.props.match.params.table;\n    return (\n      <div className=\"orderpage-container\">\n        {console.log(\"this.state.order\", this.state.order)}\n\n        <MenuNavbar tableNumber={tableNumber} />\n        <div>\n          <TableOrder\n            order={this.state.order}\n            isLoading={this.state.isLoading}\n            handleRemoveDish={this.handleRemoveDish}\n            tableNumber={tableNumber}\n          />\n        </div>\n        <div>\n          {this.state.order.paid ? (\n            <h3 id=\"green\">\n              Thank you! Your dish is being prepared and soon we will serve you.{\" \"}\n            </h3>\n          ) : (\n            <h3 id=\"red\">Pending to pay</h3>\n          )}\n          {this.state.order.paid ? (\n            \"\"\n          ) : (\n            <Payment\n              tableNumber={tableNumber}\n              changeToPaid={this.changeToPaid}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","/home/mgotzens/projects/project3/payatthetable/client/src/components/Payment/Payment.jsx",[],"/home/mgotzens/projects/project3/payatthetable/client/src/components/TableOrder/TableOrder.jsx",["139","140"],"import React, { Component } from \"react\";\n// import \"./TableOrder.css\";\nimport { removeDishFromOrder, getOrder } from \"../../services/order\";\n\nexport default class TableOrder extends Component {\n  price = () => {\n    return this.props.order.dishesOrdered.reduce((acc, el) => {\n      console.log(\n        `el.dishType.price : ${el.dishType.price} and el.units: ${el.units}=>acc:${acc} `\n      );\n      return acc + el.dishType.price * el.units;\n    }, 0);\n  };\n\n  render() {\n    if (this.props.isLoading) {\n      console.log(\"this.state.isLoading before return\", this.state.isLoading1);\n      return <div>Loading ...</div>;\n    }\n    if (!this.props.order) {\n      console.log(\"this.state.isLoading before return\", this.state.isLoading1);\n      return <div>NO ORDERS YET</div>;\n    }\n\n    return (\n      <div className=\"table-order-container\">\n        {console.log(\"props.order inside Table order\", this.props.order)}\n        <div className=\"dishtype-box\">\n          <table>\n            <tr>\n              <th>\n                <h2>Item</h2>\n              </th>\n              <th>\n                <h2>Units</h2>\n              </th>\n              <th>\n                <h2>U.Price</h2>\n              </th>\n              <th>\n                <h2>Subtotal</h2>\n              </th>\n            </tr>\n            {this.props.order.dishesOrdered.map((el) => (\n              <tr>\n                <td>\n                  <h3>{el.dishType.name}</h3>\n                </td>\n                <td>\n                  {\" \"}\n                  <h3>{el.units} u.</h3>\n                </td>\n                <td>\n                  <h3>{el.dishType.price}€/u.</h3>\n                </td>\n                <td>\n                  {\" \"}\n                  <h3> = {el.dishType.price * el.units} €</h3>\n                </td>\n                <td>\n                  {!this.props.order.paid ? (\n                    <button\n                      onClick={() =>\n                        this.props.handleRemoveDish(\n                          this.props.order,\n                          el.dishType._id\n                        )\n                      }\n                    >\n                      Remove\n                    </button>\n                  ) : (\n                    <p></p>\n                  )}\n                </td>\n              </tr>\n            ))}\n          </table>\n        </div>\n        <h2>Total: {this.price()}€</h2>\n      </div>\n    );\n  }\n}\n","/home/mgotzens/projects/project3/payatthetable/client/src/components/AdminNavbar/AdminNavbar.jsx",[],"/home/mgotzens/projects/project3/payatthetable/client/src/services/menu.js",["141"],"import axios from \"axios\";\n\nfunction internalServerError(err) {\n  console.log(\"err:\", err.response.data);\n  if (err.response && err.response.data && err.response.data.errorMessage) {\n    return {\n      status: false,\n      errorMessage: err.response.data.errorMessage,\n    };\n  }\n  return {\n    status: false,\n    errorMessage: \"Internal server error. Please check your server\",\n  };\n}\n\nfunction successStatus(res) {\n  return {\n    status: true,\n    data: res.data,\n  };\n}\n\nconst menuService = axios.create({\n  baseURL: `${process.env.REACT_APP_SERVER_URL}`,\n});\n\nexport function addNewDish(dish) {\n  return menuService\n    .post(\"/newDish\", dish)\n    .then((successStatus) => {\n      console.log(successStatus);\n    })\n    .catch(internalServerError);\n}\n\nexport function addDishToMenu(dish) {\n  console.log(\"dish inside addDishToMenu post call: \", dish);\n  return menuService\n    .post(\"/addDishToMenu\", dish)\n    .then((res) => {\n      console.log(\"res.data inside menujs\", res.data);\n      return res.data;\n    })\n    .catch(internalServerError);\n}\n\nexport function removeDishFromMenu(dish) {\n  console.log(\"dish inside addDishToMenu post call: \", dish);\n  return menuService\n    .post(\"/removeDishFromMenu\", dish)\n    .then((res) => {\n      console.log(\"res.data inside menujs\", res.data);\n      return res.data;\n    })\n    .catch(internalServerError);\n}\n\nexport function getAllDishes() {\n  return menuService\n    .get(\"/getAllDishes\")\n    .then((res) => res.data)\n    .catch(internalServerError);\n}\n\nexport function getMenu() {\n  return menuService\n    .get(\"/getMenu\")\n    .then((res) => res.data)\n    .catch(internalServerError);\n}\n","/home/mgotzens/projects/project3/payatthetable/client/src/components/Dish/Dish.jsx",[],"/home/mgotzens/projects/project3/payatthetable/client/src/services/order.js",["142"],"import axios from \"axios\";\n\nfunction internalServerError(err) {\n  console.log(\"err:\", err.response.data);\n  if (err.response && err.response.data && err.response.data.errorMessage) {\n    return {\n      status: false,\n      errorMessage: err.response.data.errorMessage,\n    };\n  }\n  return {\n    status: false,\n    errorMessage: \"Internal server error. Please check your server\",\n  };\n}\n\nfunction successStatus(res) {\n  return {\n    status: true,\n    data: res.data,\n  };\n}\n\nconst orderService = axios.create({\n  baseURL: `${process.env.REACT_APP_SERVER_URL}/order`,\n});\n\nexport function addNewOrder(table) {\n  console.log(\"table inside Order Service\", table);\n  return orderService\n    .post(\"/addNewOrder\", table)\n    .then((res) => {\n      console.log(\"this is the new order in blank from the server\", res.data);\n      return res.data;\n    })\n    .catch(internalServerError);\n}\n\nexport function addDishToOrder(dishAndTable) {\n  return orderService\n    .post(\"/addDishToOrder\", dishAndTable)\n    .then((res) => {\n      console.log(\"new and updated orderfrom the server\", res.data);\n      return res.data;\n    })\n    .catch(internalServerError);\n}\nexport function getOrder(tableNumber) {\n  return orderService\n    .post(\"/getOrder\", tableNumber)\n    .then((res) => {\n      console.log(\"this is the response of the getOrder function\", res.data);\n      return res.data;\n    })\n    .catch(internalServerError);\n}\n\nexport function getTotal(table) {\n  return orderService\n    .post(\"/getTotal\", table)\n    .then((res) => {\n      console.log(\"this is the get total in order service\", res.data);\n      return res.data;\n    })\n    .catch(internalServerError);\n}\n\nexport function changeToPaid(table) {\n  return orderService\n    .post(\"/changeToPaid\", table)\n    .then((res) => {\n      console.log(\"new and updated orderfrom the server\", res.data);\n      return res.data;\n    })\n    .catch(internalServerError);\n}\n\nexport function getAllOrders() {\n  return orderService\n    .get(\"/getAllOrders\")\n    .then((res) => {\n      console.log(\"get al orders\", res.data);\n      return res.data;\n    })\n    .catch(internalServerError);\n}\n\nexport function clearTable(table) {\n  return orderService\n    .post(\"/clearTable\", table)\n    .then((res) => {\n      console.log(\"response in order.js for clear table\", res.data);\n      return res.data;\n    })\n    .catch(internalServerError);\n}\nexport function removeDishFromOrder(orderIdAndDish) {\n  return orderService\n    .post(\"/removeDishFromOrder\", orderIdAndDish)\n    .then((res) => {\n      console.log(\"response in order.js remove dish\", res.data);\n      return res.data;\n    })\n    .catch(internalServerError);\n}\n","/home/mgotzens/projects/project3/payatthetable/client/src/components/Payment/CheckOutForm.jsx",["143"],"import React, { useState, useEffect } from \"react\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\n\nexport default function CheckoutForm(props) {\n  const [succeeded, setSucceeded] = useState(false);\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState(\"\");\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState(\"\");\n  const stripe = useStripe();\n  const elements = useElements();\n  useEffect(() => {\n    // Create PaymentIntent as soon as the page loads\n    window\n      .fetch(\n        `${process.env.REACT_APP_SERVER_URL}/payment/create-payment-intent`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ items: props.tableNumber }),\n        }\n      )\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        setClientSecret(data.clientSecret);\n      });\n  }, []);\n  const cardStyle = {\n    style: {\n      base: {\n        color: \"#32325d\",\n        fontFamily: \"Arial, sans-serif\",\n        fontSmoothing: \"antialiased\",\n        fontSize: \"16px\",\n        \"::placeholder\": {\n          color: \"#32325d\",\n        },\n      },\n      invalid: {\n        color: \"#fa755a\",\n        iconColor: \"#fa755a\",\n      },\n    },\n  };\n  const handleChange = async (event) => {\n    // Listen for changes in the CardElement\n    // and display any errors as the customer types their card details\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n  const handleSubmit = async (ev) => {\n    ev.preventDefault();\n    setProcessing(true);\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement),\n      },\n    });\n    if (payload.error) {\n      setError(`Payment failed ${payload.error.message}`);\n      setProcessing(false);\n    } else {\n      setError(null);\n      setProcessing(false);\n      setSucceeded(true);\n      props.changeToPaid();\n    }\n  };\n  return (\n    <form className=\"stripe\" id=\"payment-form\" onSubmit={handleSubmit}>\n      <CardElement\n        id=\"card-element\"\n        options={cardStyle}\n        onChange={handleChange}\n      />\n      <button\n        className=\"stripe\"\n        disabled={processing || disabled || succeeded}\n        id=\"submit\"\n      >\n        <span id=\"button-text\">\n          {processing ? <div className=\"spinner\" id=\"spinner\"></div> : \"Pay\"}\n        </span>\n      </button>\n      {/* Show any error that happens when processing the payment */}\n      {error && (\n        <div className=\"card-error\" role=\"alert\">\n          {error}\n        </div>\n      )}\n      {/* Show a success message upon completion */}\n      <p className={succeeded ? \"result-message\" : \"result-message hidden\"}>\n        Payment succeeded! Your food is on the way to your table. Enjoy your\n        mail :)\n      </p>\n    </form>\n  );\n}\n",{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":14},{"ruleId":"148","severity":1,"message":"152","line":7,"column":8,"nodeType":"150","messageId":"151","endLine":7,"endColumn":21},{"ruleId":"148","severity":1,"message":"153","line":18,"column":10,"nodeType":"150","messageId":"151","endLine":18,"endColumn":15},{"ruleId":"148","severity":1,"message":"154","line":1,"column":8,"nodeType":"150","messageId":"151","endLine":1,"endColumn":12},{"ruleId":"148","severity":1,"message":"155","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":25},{"ruleId":"156","severity":1,"message":"157","line":46,"column":17,"nodeType":"158","endLine":49,"endColumn":18},{"ruleId":"148","severity":1,"message":"159","line":11,"column":10,"nodeType":"150","messageId":"151","endLine":11,"endColumn":21},{"ruleId":"148","severity":1,"message":"153","line":5,"column":10,"nodeType":"150","messageId":"151","endLine":5,"endColumn":15},{"ruleId":"148","severity":1,"message":"160","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":21},{"ruleId":"148","severity":1,"message":"161","line":5,"column":8,"nodeType":"150","messageId":"151","endLine":5,"endColumn":17},{"ruleId":"144","replacedBy":"162"},{"ruleId":"146","replacedBy":"163"},{"ruleId":"148","severity":1,"message":"164","line":7,"column":3,"nodeType":"150","messageId":"151","endLine":7,"endColumn":17},{"ruleId":"148","severity":1,"message":"165","line":12,"column":3,"nodeType":"150","messageId":"151","endLine":12,"endColumn":15},{"ruleId":"148","severity":1,"message":"166","line":3,"column":10,"nodeType":"150","messageId":"151","endLine":3,"endColumn":29},{"ruleId":"148","severity":1,"message":"167","line":3,"column":31,"nodeType":"150","messageId":"151","endLine":3,"endColumn":39},{"ruleId":"148","severity":1,"message":"168","line":17,"column":10,"nodeType":"150","messageId":"151","endLine":17,"endColumn":23},{"ruleId":"148","severity":1,"message":"168","line":17,"column":10,"nodeType":"150","messageId":"151","endLine":17,"endColumn":23},{"ruleId":"169","severity":1,"message":"170","line":31,"column":6,"nodeType":"171","endLine":31,"endColumn":8,"suggestions":"172"},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'ProtectedPage' is defined but never used.","'Route' is defined but never used.","'logo' is defined but never used.","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'findDOMNode' is defined but never used.","'MenuFooterbar' is defined but never used.","'OrderPage' is defined but never used.",["173"],["174"],"'addDishToOrder' is defined but never used.","'getAllOrders' is defined but never used.","'removeDishFromOrder' is defined but never used.","'getOrder' is defined but never used.","'successStatus' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.tableNumber'. Either include it or remove the dependency array.","ArrayExpression",["175"],"no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},"Update the dependencies array to be: [props.tableNumber]",{"range":"178","text":"179"},[1013,1015],"[props.tableNumber]"]